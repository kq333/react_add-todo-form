{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","combinedArray","usersFromServer","find","App","useState","sectionValue","setSectionValue","inputValue","setInputValue","todosFromServer","CopyToDoList","setCopyToDoList","titleState","setTitleState","selectState","setselectState","onSubmit","event","preventDefault","Math","max","elem","length","placeholder","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65b66027.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface UserProps {\n  user: User | null,\n}\n\nexport const UserInfo: React.FC<UserProps> = ({ user }) => {\n  return (\n\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todos } from '../../types/Todos';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todos;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const { title, user, completed } = todo;\n\n  const className = completed ? 'TodoInfo TodoInfo--completed' : 'TodoInfo';\n\n  return (\n    <article data-id=\"1\" className={className}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../../types/Todos';\n\ninterface TodoListProps {\n  todos: Todos[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <>\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { User } from './types/User';\nimport { Todos } from './types/Todos';\n\nfunction combinedArray(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction InitialArray(): Todos[] {\n  return todosFromServer.map(todo => ({\n    ...todo,\n    user: combinedArray(todo.userId),\n  }));\n}\n\nexport const App = () => {\n  const [sectionValue, setSectionValue] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [CopyToDoList, setCopyToDoList] = useState<Todos[]>(InitialArray());\n\n  const [titleState, setTitleState] = useState(false);\n  const [selectState, setselectState] = useState(false);\n\n  const addTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const newId = Math.max(...CopyToDoList.map((elem) => elem.id));\n    const userId = +sectionValue;\n\n    const todo: Todos = {\n      id: newId + 1,\n      title: inputValue,\n      completed: false,\n      userId: 0,\n      user: combinedArray(userId),\n    };\n\n    if (inputValue.length === 0) {\n      setTitleState(true);\n    }\n\n    if (sectionValue.length === 0) {\n      setselectState(true);\n    }\n\n    if (sectionValue.length > 0 && inputValue.length > 0) {\n      setCopyToDoList([...CopyToDoList, todo]);\n      setInputValue('');\n      setSectionValue('');\n      setTitleState(false);\n      setselectState(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={addTodo}>\n        <div className=\"field\">\n          <input\n            placeholder=\"enter the title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={inputValue}\n            onChange={(event) => {\n              setInputValue(event.target.value);\n              setTitleState(false);\n            }}\n          />\n          {titleState\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={sectionValue}\n            onChange={(event) => {\n              setSectionValue(event.target.value);\n              setselectState(false);\n            }}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n          {selectState\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={CopyToDoList} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}